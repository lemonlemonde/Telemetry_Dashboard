syntax = "proto3";

package telemetry;


enum System {
    UNKNOWN_SYSTEM = 0;
    ENGINE = 1;
    FUEL_TANK = 2;
    AVIONICS = 3;
    TURBOPUMP = 4;
    GUIDANCE = 5;
    STAGE1 = 6;
    STAGE2 = 7;
}

enum TelemetryType {
    TEMPERATURE = 0;
    PRESSURE = 1;
    VELOCITY = 2;
}

service TelemetryService {
    // specific method 
    rpc GetTelemetryStream(TelemetryRequest) returns (stream TelemetryResponse);
}

// request all telemetry for all TelemetryType's
message TelemetryRequest {
}


message TelemetryResponse {
    string timestamp = 1;
    
    TelemetryType type = 4;
    
    // Use oneof for type-specific data
    oneof data {
        TemperatureData temperature = 5;
        PressureData pressure = 6;
        VelocityData velocity = 7;
    }
}


message TemperatureData {
    string sensor_id = 1;
    System subsystem = 2;

    float temperature = 3;
    string unit = 4;
    uint32 status_bitmask = 5;
    
    int32 sequence_number = 6;
}

message PressureData {
    string sensor_id = 1;
    System subsystem = 2;
    
    float pressure = 3;
    string unit = 4;
    uint32 status_bitmask = 5;
    bool leak_detected = 6;
    
    int32 sequence_number = 7;
}

message VelocityData {
    string sensor_id = 1;
    System subsystem = 2;
    
    float velocity_x = 3;
    float velocity_y = 4;
    float velocity_z = 5;
    string unit = 6;
    float vibration_mag = 7;
    
    uint32 status_bitmask = 8;
    int32 sequence_number = 9;
}